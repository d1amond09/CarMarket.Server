// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarMarket.Server.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240605094806_UpdateDatabase")]
    partial class UpdateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CarId");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CarShopId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Carcase")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarShopId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80abb123-a23d-3b20-b5de-0a570aa9764a"),
                            Brand = "BMW",
                            CarShopId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Carcase = "Sedan",
                            Name = "BMW 2 seria F44",
                            Price = 27999.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("80abb123-a23d-4b20-b5de-0a5701a9764a"),
                            Brand = "BMW",
                            CarShopId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Carcase = "SUV",
                            Name = "BMW X6 F16",
                            Price = 39900.0,
                            Year = 2015
                        },
                        new
                        {
                            Id = new Guid("81abb123-a23d-4b20-b5de-0a570aa9764a"),
                            Brand = "Mercedes-Benz",
                            CarShopId = new Guid("3d490a70-94c2-4d15-9494-5248280c2ce3"),
                            Carcase = "Sedan",
                            Name = "Mercedes-Benz E-Класс W212, S212, C207, A207",
                            Price = 19999.0,
                            Year = 2013
                        });
                });

            modelBuilder.Entity("Entities.Models.CarShop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CarShopId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("CarShops");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Address = "Gomel, Sovetskaia 15",
                            Country = "Belarus",
                            Name = "AutoShop Ltd",
                            Phone = "+375296578123"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94c2-4d15-9494-5248280c2ce3"),
                            Address = "Berlin, Pohlstrbe 12",
                            Country = "German",
                            Name = "CarShop Ltd",
                            Phone = "+49446578123"
                        });
                });

            modelBuilder.Entity("Entities.Models.Car", b =>
                {
                    b.HasOne("Entities.Models.CarShop", "CarShop")
                        .WithMany("Cars")
                        .HasForeignKey("CarShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarShop");
                });

            modelBuilder.Entity("Entities.Models.CarShop", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
